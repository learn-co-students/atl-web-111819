{"ast":null,"code":"var _jsxFileName = \"/Users/shivangdave/Documents/Work/atl-web-111819/38-intro-to-redux/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { createStore } from 'redux';\nconst initialState = {\n  count: 0\n}; // store.dispatch({ type: 'SOME_ACTION' })\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'INC') {\n    return {\n      count: state.count + 1\n    };\n  } else if (action.type === 'DEC') {\n    return {\n      count: state.count - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst Header = () => {\n  return React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"App-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Welcome to React\"));\n};\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDescription = () => {\n      const count = store.getState().count;\n      const remainder = count % 5;\n      const upToNext = 5 - remainder;\n      return `The current count is less than ${count + upToNext}`;\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", store.getState().count, \" \"), React.createElement(\"button\", {\n      onClick: () => store.dispatch({\n        type: 'INC'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" - \"), React.createElement(\"button\", {\n      onClick: () => store.dispatch({\n        type: 'INC'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" + \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.renderDescription()));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/shivangdave/Documents/Work/atl-web-111819/38-intro-to-redux/src/index.js"],"names":["React","Component","ReactDOM","createStore","initialState","count","reducer","state","action","type","store","window","__REDUX_DEVTOOLS_EXTENSION__","App","Header","logo","Counter","renderDescription","getState","remainder","upToNext","componentDidMount","subscribe","forceUpdate","render","dispatch","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { createStore } from 'redux';\n\nconst initialState = { count: 0 };\n\n// store.dispatch({ type: 'SOME_ACTION' })\n\nconst reducer = (state = initialState,action) => {\n\n  if(action.type === 'INC'){\n    return { count: state.count + 1 }\n  }else if(action.type === 'DEC'){\n    return { count: state.count - 1 }\n  }\n\n  return state\n}\n\nconst store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Counter />\n    </div>\n  );\n}\n\nconst Header = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"App-title\">Welcome to React</h1>\n    </header>\n  );\n}\n\nclass Counter extends Component {\n\n  componentDidMount(){\n    store.subscribe(() => this.forceUpdate())\n  }\n\n  renderDescription = () => {\n    const count = store.getState().count;\n    const remainder = count % 5;\n    const upToNext = 5 - remainder;\n    return `The current count is less than ${count + upToNext}`;\n  };\n\n  render(){\n    return (\n      <div className=\"Counter\">\n        <h3> {store.getState().count} </h3>\n        <button onClick={() => store.dispatch({ type: 'INC' })}> - </button>\n        <button onClick={() => store.dispatch({ type: 'INC' })}> + </button>\n        <h3>{this.renderDescription()}</h3>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}